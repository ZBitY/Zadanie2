name: Build and Push Multi-Arch Docker Image

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: ghcr.io/zbity/zadanie2
  CACHE_IMAGE: przemekzbiciak/weather-cache
  TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to DockerHub (for cache)
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}


    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ env.IMAGE_NAME }}:${{ env.TAG }}
        cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}:cache
        cache-to: type=registry,ref=${{ env.CACHE_IMAGE }}:cache,mode=max
        
    - name: Scan image for CVEs (trivy)
      uses: aquasecurity/trivy-action@0.30.0
      with:
        image-ref: ${{ env.IMAGE_NAME }}:${{ env.TAG }}
        severity: CRITICAL,HIGH
        exit-code: 1

    - name: Push image to GHCR (only if scan passed)
      if: success()
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          ${{ env.IMAGE_NAME }}:${{ env.TAG }}
        cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}:cache
        cache-to: type=registry,ref=${{ env.CACHE_IMAGE }}:cache,mode=max
